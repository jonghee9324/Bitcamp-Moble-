@ 정렬
-순차정렬 : 처리시간은 n개의 데이터가 있을경우 최악의 경우 n^2
-삽입정렬
-버블정렬 : 한번이라도 바꼈으면 처음부터 다시 돈다. 비교는 2개씩 맨앞부터 차례대로 2개씩 비교


@반복문
while True: 구문은 탈출조건이 없어서 메모리에 영향이 많이가서 탈출조건이 없는 무한루프는 안해야한다.
협업에서는 break를 잘 사용안함, 변수를 통한 무한루프를 많이 사용
break를 사용하면 바로 상위의 반복문만 종료, break가 연속으로 찍혀도 가장 처음의 break만 실행
ex)
break
print
break  가장처음의 break만 실행되고 print는 실행되지 않음

continue도 break와 마찬가지로 여러개가 적혀도 가장 위에 있는 continue만 실행됨
break, continue는 반드시 반복문에서만 사용할 것


@함수
변수, 구문을 하나로 줄이고 싶을 때 사용하는 것
***같은 기능별로 분리한다.
같은 기능을 묶어 놓음
입력값이 있으면 출력값이 존재

c에서 출력은 한가지 타입만 반환가능, 따라서 함수명 앞의 자료형은 하나밖에 못쓴다, 입력값은 무제한
파이썬은 입력값 출력값 모두 무제한이다.
-파이썬 함수 정의 
def 함수명( ) :
	구현내용
	return

파이썬 함수에 리턴값을 2개 이상 작성 시 1개의 변수로 받을 경우 튜플 형태로 반환값이 나옴
파이썬도 c처럼 리턴값은 튜플 1개이지만 튜플로 이루어져 여러개의 값으로 받는 것 처럼 보여진다.
반환값을 받는 변수가 여러개면 각 각의 변수에 반환값이 들어감
ex)
a = 1
b=2
def add(a,b):
    return a+b, a-b
c = add(a,b)
d,e = add(a,b)
c = (3, -1), d = 3, e = -1

함수를 호출할 때 변수 위치를 변경하여 지정할 수 있다.
함수 선언 시 매개변수를 미리 정의할 수 있다. 이렇게 되면 매개변수가 여러개 있을 시 해당 변수 부분은
호출시 인수를 전달하지 않아도 된다. 매개변수 전달 시 전달한 매개변수로 덮어 씌워짐 

함수의 결과를 값으로 받는 방법
1. return
2. global

@@ 매개변수 다루는 방법 (다른 언어의 함수와 다른점)
1. 지정 가능 def A(a,b) >>. A(b=3,a=1) 가능
2. 초기값을 갖을 수 있음 def A(a,b=3) >>> A(a), A(a,b) 둘 다 사용가능, 
전자의 경우 함수를 정의할 때 정의한 b의 초기값 3 사용,  후자의 경우 입력받은 인수 사용
3. 매개변수 다수지정 def A(*args) >> args에 받은 인수를 튜플로 바꿔줌 

@@파이썬 -함수의 매개변수 *args
매개변수로 *args 사용 가능, 사용 시 매개변수 제한 없음, 받은 인수 튜플로 만듦
*args는 맨 뒤에만 사용가능 
ex) def A(a,b, *args) 만 사용 가능 , (*args,a,b) 에러

@@파라미터, 아규멘트
파라미터는 함수에 입력되는 값, 아규멘트는 함수에 넘겨주는 값

@@파이썬 함수 - global
함수 매개변수로 받지 않은 변수이지만 함수내에서 사용하고 싶으면 global 사용
global은 함수 외부에 정의된 변수를 가져와 사용할 수 있음
global a >>> 함수 밖의 a를 사용 a =1 하면 밖에서 선언된 a의 값이 1이 됨

@@call by value, reference
포인터 : 주소를 가르키는 값 (즉 ,다른 주소안에 주소값이 들어가 있음)
파이썬의 리스트는 주소를 갖고있음, 주소임

@Lambda - 람다
함수를 한 줄로 만드는 방법
사용법 
ex)
함수명 = lambda a,b : a+b // : 기준으로 앞은 매개변수, 뒤는 반환값

@파일 입출력
데이터를 HDD에 저장하기 위함
우리가 사용하는 데이터들은 메모리(RAM), cpu에 올라가 실행됨 
1. r : 읽기모드
2. w: 쓰기모드 : 기존의 자료를 다 지우고 다시씀
3. a: 추가모드 : 기존의 자료에 내용을 추가한다.
한 번 열어본 파일은 다른 곳에서 사용할 수 없음, 한 번 열면 다른 모드로 변경 불가능
한번 열면 반드시 닫아야한다.
-------------------------------------------------------------------------------------------
@복습

