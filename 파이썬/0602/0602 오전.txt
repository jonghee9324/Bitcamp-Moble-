@클래스
메모리에 올라가 있지 않고 정의만 된 상태(함수, 변수 정의)


@객체
메모리에 올라가있는 실체(언제든지 사용하고, 불러올 수 있음)


@객체지향과 순차지향 차이
객체지향과 순차지향은 위에서 아래로 흐르지만
순차지향은 모든내용을 메모리에 적재하고 사용하는 방법
객체지향은 클래스를 이용하여 내가 필요한 부분만 메모리에 올려 객체로 만들어 사용하는
기술을 권장하는 방법

@언어의 차이
c >> c++ >> c# 

java 클래스, jvm        (컴파일언어)
---------------------------------------
파이썬 클래스, 인터프리터

@파이썬 - 라이브러리
파이썬은 기본 라이브러리를 넣어둠, 탑재됨
기존의 넣어둔 라이브러리의 내용을 바꿔야하는 경우 파일의 내용을 바꿔야함(단점)
c의 경우 include를 다른 것으로 하면 됨.


@파이썬 -string(문자열 조합법) 
-string format : 
1. 문자열 더하기(형변환 필수)
2. %s
3. { }. format()
4.f'{name}' python
파이썬은 한글을 한 문자로 봄
파이썬은 2바이트체계의 문자인 유니코드 사용 (자바도 동일)
c 는 1바이트체계의 ASCII 사용 


@아스키 코드를 이용한 문자 변환
숫자 0, 문자'0' 일 경우 문자0을 숫자 0으로 바꾸는 방법은 문자'0'에 숫자0의 16진수 값을 빼주면됨
'0' - 0x30

@파이썬 - 리스트
' [ ] ' 사용, 모든 자료형을 담을 수 있는 집합
데이터 집합, 리스트와 배열은 다르다.
배열은 같은 자료형만 연속적으로 저장이 되지만, 리스트는 다른 자료형도 연속적으로 저장 가능
여기서의 리스트는 배열이아닌 c의 리스트를 가지고와 변형 시킨 것
편의성을 제공하지만 모든 처리속도는 다 느리다.

@ArrayList, LinkedList Vector
가장 상위는 벡터, LinkedList에 인덱스를 붙인 것이 ArrayList
즉, 자료가 연속적이지 않다. 
다만 노드들이 다음 노드의 주소값을 가지고 있어, 연속적이지 않은것을 연속적인 것 처럼 사용할 수 있음. 
ArrayList는 리스트구조에 인덱스를 가져 배열처럼 인덱스로 참조할 수 있음( 참조방법 : 리스트명.get(인덱스) )
하지만 이 때 인덱스를 사용한다 하더라도 맨 처음부터 해당 인덱스까지 찾기 시작한다.
이것을 효율적으로 사용하기 위해 각 인덱스와 그 인덱스 주소값을 저장하는 배열을 만들어 사용하면 된다.
그렇게되면 배열에 저장된 주소값을 참조하여 바로 사용할 수 있어 get메소드를 통해 사용할 때 처음부터
찾아서 사용한다는 단점을 보완할 수 있다. (단, 주소값을 참조하여 값을 가져오는 방법을 알아야함)


