@인공지능
가르쳐주면 저장을 계속함, 그러면 패턴이 생김 그 패턴을 쉽게 구할 수 있는 것

@class
@@변수
클래스 변수 : 클래스이름.변수이름 (모든 객체 공유)
인스턴스 변수 : self.변수명 ( 객체마다 변수가 달라짐) // 값이 변하면 가급적이면 인스턴스 변수로 만들어 사용하길ggl 권장

@@global 
클래스 변수를 클래스 내 내부함수에서 사용할 순 있지만 그 결과의 유효성이 다르다 global은 함수 내부에서만 효과를 갖는다.
사용하지 말 것

@@메소드
- 생성자
객체(인스턴스)가 생성될 때 클래스가 메모리에 로드 될 때 실행

-소멸자
객체(인스턴스)가 삭제될 때, 클래스가 메모리에서 사라질 때

-오버로딩
함수 이름이 같고, 매개변수 개수나 자료형이 다른 것을 다른 함수로 인식하는 것

@상속
공통된 특징을 공유하기 위해 사용
포함한다 

-오버라이딩
상속에서 사용하며, 함수이름, 매개변수가 같을 때 자식클래스의 함수로 덮어씌우는 것


@모듈
모듈은 파일이라고 보면 된다, 파일 추가다.
모듈은 동일 폴더내에서만 로드 가능하다.
사용은 같은 폴더 내에 있는 파일의 이름을 import해줌 된다.
from 파일명(확장자빼고) import 사용할변수, 클래스 명 등등등 : import 뒤에 사용할 것을 나열하기 싫으면 *

을 사용하면 원래 import 받은 파일명.파일안의 클래스명, 변수명 을 사용해야하는 것을 파일명을 참조하지 않아도 사용할 수 있다.
ex) import mod1
mod1의 것들을 사용하기 위해선 mod1.내부클래스, 변수 등
from mod1 import 클래스명을하면 참조하지 않고 사용가능  내부클래스

모듈을 사용할 땐 파일을 나누고 버전이 달라지면 파일내에 다른 클래스로 추가하여 , from 파일명 import 버전 형식으로 사용할 것
모듈로 만들어두면 기존 소스는 만들지 말고 다른 파일로 확장하던가 동일 파일내 다른 클래스로 만들어 사용할 것 

@경로설정
import sys
sys.path안에 있는 경로만 경로없이 파일명을 사용할 수 있음,같은 폴더가 아닌 곳에서 사용하고 싶으면 
path에 해당 경로를 append 해주면 됨(append를 해주는 이유는 path가 리스트이기 때문이다.)

@패키지
폴더
파이썬 버전에 따라 __init__.py 파일을 만들어줘야 해당 폴더를 패키지로 인식한다.(생성자와 동일한 이름)

@예외처리 
해당 구문이 오류가 아니다 라고 정의하는 것
오류가 나면 프로그램이 정지하여 다시 시작하게 되는 것을 방지해줌
파이썬 : try~expact로 사용
자바 : try ~ catch로 사용
파이썬 실행 시 에러가 나면 빨간색으로 Error : 에러내용 가 뜬다. Error 구문이 except 뒤에 적을 에러내용
raise Exception을 사용해서 강제로 except문으로 갈 수 있음