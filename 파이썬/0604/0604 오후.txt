@class
변수와 메소드가 정의됨(선언)

@객체화
메모리에 올린(할당 함) 클래스
인스턴스화 라고도 한다.

@클래스 변수
클래스 내부에 선언된 변수
class A:
	a=1	#클래스변수 : 클래스가 선언될 때 메모리에 할당되는 변수
	def val():
		self.w # 인스턴스 변수 : 이 구문, 인스턴스가 실행될 때 메모리에 할당되는 변수

@모듈화
최소의 기능

@오버로딩
매개변수가 다르면 다르게 출력할 수 있음
상속이든 아니든 상관없음
이름은 같아도 매개변수의 개수, 자료형이 다르면 다른 함수이다.
함수의 이름이 같은데 매개변수 개수, 자료형이 다릅니다. 그래서 다른 함수로 인식되는 것 

@@파이썬 오버로딩
파이썬은 오버로딩을 위해 같은 이름의 함수를 매개변수만 다르게 해 사용할 수 없다 이름이 같으면 에러가 난다.
그래서 파이썬의 오버로딩은 초기값을 사용해야한다.
하지만 파이썬은 매개변수가 다르면 다른 함수다라는 개념이 없고, 파이썬의 오버로딩에서는 매개변수가 다른 같은함수가 된다.
def A(a, b=0): 로 작성하게되면 A(1), A(1,2) 다 가능
생성자를 오버로딩 하고싶은 경우, 초기값을 성정하면됨

@오버라이딩
상속에서만 가능하며, 함수의 이름과 매개변수의 개수 및 자료형이 같은 함수로 자식 클래스의 함수로 덮어씌우는 방법

@상속
포함한다. 
사용법 - class 클래스명(상속받을클래스명): 
파이썬에서 상속은 생성자의 내용도 상속받기 때문에 상속받은 클래스의 생성자와 동일하게 사용해야한다.
또 상속받아온 클래스의 클래스 변수를 사용한다. 그래서 상속받은 클래스의 변수를 상속받아온 클래스와 동일하게 작성하면
상속받은 클래스의 변수내용으로 덮어씌운다. (즉, 상속받은 클래스와 상속받아온 클래스의 변수명이 같은경우 같은 변수로 본다.)
상속은 대부분이 공통이고 각 클래스마다 특별한 특성이 필요할 때 사용한다. 하지만 실무에서는
누군가 짜둔 엄청 큰 라이브러리를 받아서 사용하게 될 때 사용된다.

@@다중상속
class 클래스명 (A, B): 이렇게 되면 B보다 A가 더 큰개념이 된다.(즉, A가 B를 포함한다.)
- 다중상속의 경우 왼쪽이 오른쪽을 포함한다. 그렇기 때문에 변수명이 같을 경우 A의 변수로 덮어쓴다.
자바에서 다중 상속기능을 지원하지만 어떤 변수가 어떤 것을 가르키는지 모르기 때문에 권장하지 않음

@모듈
파일 하나를 모듈이라고 생각하면 됨.
파일 = 모듈, 폴더 = 패키지
그 파일엔 함수, 클래스, 변수가 존재함 그래서 파일 단위의 함수, 클래스, 변수의 모음
