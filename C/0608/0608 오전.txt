@ C 언어
가장 어렵고 까다로운 언어
포인터때문에 어렵고 까다로움. 포인터가 90%이상
포인터로가면서 알고리즘, 자료구조, 메모리구조가 나온다.
< 백준 알고리즘 > 알고리즘 사이트
객체는 주소이며, 객체는 전부 포인터로 이루어져 있고 파이썬과 자바는 내부적으로 다 포인터이다.
c언어는 가장 기본인 언어이기 때문에 배워야한다.

비주얼과 동일시 보지말, 비주얼은 툴로 컴파일러가 탑재된 툴로 c의 컴파일러 이름은 gcc이다.
gcc를 통해 빌드를 해 메모리에 올린다.( c++ 컴파일러는 g++이다.)
c언 내용을 gcc를 통해 실행파일을 만들어 Run한다.
실무로 가면 비주얼은 유로이기 때문에 사용할 수 없다.
그래서 gcc를 사용할 줄 알아야한다.

c를 무료로 하기위해선 리눅스에서 gcc를 통해 make파일로 만들어 사용해야한다

장점 : 포인터를 통해 메모리에 직접 접근할 수 있다, 빠르다. 따라서 소형디바이스 컨트롤 제작 적합
단점 : 포인터가 어렵다. (프로그래머가 생각해야하는 상황에 대한 변수들이 너무 많다.)
프로그램을 빠르게 작성하는데 어려움이 있다. 알고리즘에 따라 구조를 만들어야 함

c에서는 파이썬과 동일하게 다른파일을 로드할 수 없음. 따라서 헤더파일로 만들고 그 헤더파일이름과 동일한 c파일을 만들어야함
헤더파일에는 함수의 껍데기만 정의하고 c파일에서 구현한다.
일반 라이브러리는  " ", 표준 라이브러리는 < >로 사용

@@특징
절대 재사용(객체라는 개념이 없다)
선언시 메모리에 할당(동적할당을 통해 내가 원할 때 할 수 있음, 하지만 크기를 반드시 지정해야한다.)
원하는 시점에 메모리를 할당받을 수 있지만 반드시 크기를 지정해야한다. 따라서 고정된 크기를 갖는 단점을 갖는다.
C는 운영체제에 종속적(즉, 리눅스에서 gcc와 윈도우 gcc는 다름)
운영체제는 cpu에 종속적
안드로이드 cpu를 컴퓨터cpu에서 돌리려면 크로스컴파일해야함


@ 객체지향
내가 원하는 클래스만 메모리에 올려 재사용하며 사용하겠다.

@ c 언어와 자바, 파이썬차이
클래스의 유무, c는 포인터가 있고, 자바는 포인터가 없지만 객체라는 것이 포인터의 개념이다 
따라서 내부적으로 전부 포인터라고 할 수 있다.
c, 자바는 컴파일언어로 코드 중 에러가 있으면 실행이 안되고 파이썬은 인터프리터 방식으로 한줄씩 실행되고,  한줄씩 실행되기
때문에 도중에 에러가 있으면 에러를 만나기 전까지 실행이된다.

@컴파일러
프로그래밍 언어를 기계어(실행파일)로 바꿔주는 친구
c : gcc,
c++ : g++
java : javac
빌드&런인 컨트롤+f5누르지 말것 빌드(컴파일러가함), 실행 따로할것

@디버그모드
개발자가 코드의 오류부분을 찾기위해 쓰는 모드 

@프로그램 실행
프로그램은 다음과 같다
1. 작성
2. 컴파일 >> 맨처음 main함수를 실행해 그 안에 들어가있는 함수를 실행한다.
3. 링크 >> 전처리기를 통해 헤더파일 이름의 c파일을 실행시킨다.
4. 실행파일 생성
#이 붙은 것을 전처리기라고 한다.
전처리기로 실행한 헤더파일명의 c파일을 실행해 가져온다.
main함수를 찾아 프포그램을 실행하고 main함수에서 선언한 메소드를 전처리기를 통해 가져온 것중에 있는 찾고 있으면 가져옴
main은 스택의 맨 밑에 쌓이고 가장 마지막에 나간다.
ex)
#include<stdio.h>
void main() {
	printf("1,2");
	printf("5");
}

c언어의 메모리 구조는 stack구조이다.
전처리기를 포함한 함수들의 집합이 스택에 들어간다. ex의 실행은 main이 스택 맨 밑 그다음 printf가 실행된다 하지만
printf는 들어가자마자 실행된다. 따라서 스택에 들어가는과 동시에 나오고 더이상 실행할 구문이 없으면 main함수가 나온다.
그리고 프로그램 종료. 
실행순서
main >> printf(1,2)(실행후나옴)
main
main >> printf(5)(실행후나옴)
main (더이상 실행할 것이 없어 나옴)
c언어의 조건은 main이 스택의 맨 밑에 들어간다. 따라서 맨 마지막에 나옴 그렇게 정의됨

@@헤더파일
정의만 들어가 있고 구현x  
구현이 들어가 있는 파일은 c파일 이다.(헤더파일과 동일한 이름의 c파일이 존재해야함)
헤더파일을 찾아 헤더파일과 동일한 c파일을 컴파일하고, main이 있는 파일로 가지고온다.

