@비주얼 실행방법
빌드메뉴 >> 솔루션 빌드를 하면 obj파일이 생성됨
디버그메뉴 >> 디버깅하지않고 시작을 하면 exe 실해파일이 생성된다.
빌드밑에 debug, relesas, 비트 수를 선택 x86 : 32비트, x 64 : 64비트 설정도 가능

@헤더파일
이름만 들어가있는 무언가 데이터가 정의되어 있음

@메모리
데이터를 담는 공간

@@자료형 데이터를 어느정도 사이즈로 저장할 것인지 정의한 것

@주석
한글로 달면 깨지기 때문에 영어로 작성해야함.

@\
예약어로 사용, 특수문자(n, t 등)를 제외한 나머지 예약어를 표현할 때 사용

@string
c는 string 자료형이 없기 때문에 문자끼리 더할 순 없다.
그래서 항상 여러 내용을 작성하고 싶을 땐 \를 사용하거나 %를 사용해야한다.

@실행구문
c언어는 연산과 변수들이 계산하는 모든 구문을 함수에 포함할 수 있다.
변수 없이 연산만 입력해도 에러가 아니다.

연산은 함수 내에서 다음과 같다 가능 한 것
연산의 사칙연산은 함수에서 사용(따라서 헤더파일에서는 사용 불가)
같은 자료형에서만 사칙연산이 가능하다. 다른 자료형을 type casting하여 같은 자료로 만들어 연산을 할 수 있다.
연산 : 	함수에서 할 수 있다, 
	연산의 결과 값이 자료형이 있을 때 가능
	자료형이 다르면 안된다.
(단, 자료형이 다를 경우에도 가능한 경우가 있다. 그 경우는 같은 자료형에 큰 자료형에 작은 자료형은 들어간다.)
이럴 때 type을 갖게 맞춰주기 위해(type casting)

@자료형
char 1byte 문자형
short 2byte 정수형
int 4byte	정수형
float 4byte 실수형
double 4byte 실수형
long 8byte  정수형
정수, 실수 기본 자료형 : int double

float a 를 %d, a로 작성하지 말것

c언어에는 *로 포인터를 표시할 수 있지만 포인터로 쓸 땐 반드시 떨어뜨려서 사용해야함

@변수명
변수의 이름은 숫자로 시작하는 것은 불가, 키워드 사용불가
공백이 포함될 수 없다
대소문자 구분
변수의 이름은 알파벳, 숫자, _로 구성
const를 변수 선언 앞에 붙이게 되면 상수로 값을 변경할 수 없게 된다.
상수는 모든 변수명을 대문자로 표시하자.
=을 기준으로 왼쪽은 L밸류, 오른쪽을 R밸류라고한다.
L밸류엔 상수를 작성하지 말 것

@c언어의 참 거짓
c언어는 0과 0이 아닌 수로 참과 거짓을 구분한다.
0은 false, 0이 아닌 수 true

@연산자 우선순위
우선순위가 같은 연사자는 같이 사용할 수 없다. 그래서 이들을 합치기 위해 논리연산 사용

@논리연산
&&는 and , || 는 or
3&&4 참, 3||4는(3도 참이고, 4도 참이여서 참- c 는 0과 0이 아닌 수로 참 거짓을 판단한다. 3,4,는 0이 아니기때문에 참)
비트연산은 임베디드 연산할 때 사용
비트연산을 통해 비트를 지우는 것을 마스킹이라고 한다.

@0x자료형
int a =10;
int b= 0xa;
0xa는 a를 (0x)형으로 type casting 한 것이다. 8진수는 0이라고 붙이면 된다.

@msb
정수의 비트표현 시 가장 왼쪽비트로, 부호를 표현한다. 0이면 양수 1이면 음수
char형은 부호 비트를 사용하지 않는다.(문자는 음수가 없기 때문)
unsigned 를 사용하면 부호비트가 사라진다. 실수와 문자는 부호 비트를 사용하지 않는다.
즉, unsigned는 정수만 가능하다 따라서 int long short앞에만 붙을 수 있음

-----------------------------------------------------------------------------
<정리>
@c언어
포인터때문에 어렵지만 포인터 때문에 강력하다. 그래서 개발자가 신경쓸 것이 많다.
메모리에 직접 접근이 가능하다.

#includ <stdio.h>
void main() {
printf("ASdf");
}
가장먼저 stdio 헤더파일의 실행파일을 찾아 가져오고, main()이 스택구조의 맨 밑으로 들어가고 main()안에 있는 
내용들이 stack에 들어간다. 모든 내용이 다끝나면 가장 마지막에 main에 나온다.

@gcc
c는 컴파일 언어로 컴파일러 이름은 gcc이다, c++은 g++, java는 javac

@예약어
\는 예약어를 사용할 수 있게 해주는 변수이다.
\n. \t 

@연산자
연산자는 함수내에서만 사용할 수 있다. 결과 값이 같은 자료형에서만 사용할 수 있다. 
다른 자료형과 할 경우 type casting해서 사용

사칙연산, 논리연산, 비트연산, 대입연산, 전위후위(a++, ++a)
후위 연산자는 연산자 우선순위가 가장 낮다.

논리연산 &&, ||, 
비트연산 : &, | ,^, 
정수형 : int(4), long(8), short(2) - 정수형에만 unsigned(부호제거)를 사용할 수 있따.
문자형 : char(1)
실수형 : double(8), float(4)