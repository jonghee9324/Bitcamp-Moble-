@C언어
포인터
메모리에 직접접근이 용이하다.
프로그래머가 생각해야할 것이 많다. 자료형, 메모리 할당크기를 고려해야한다

@자료형 
실수 : float, double
문자 : char
정수 : int, long, short

@포인터
주소
*(포인터연산) 이 주소를 통해 값을 가져오는 것
포인터 선언시 (자료형*) 이라는 자료형이라고 생각하기 포인터의 사이즈는 운영체제에 따라 4,8바이트 왔다갔다 한다.
32비트는 4바이트 64비트는 8바이트

배열은 포인터(주소)이다.

@void 포인터
주소값만 갖을 수 있음

@함수포인터
리턴타입 (*변수명)(함수포인터로 만들 함수의 매개변수 자료형) = 함수명;

@구조체
선언만 들어간다.
초기화x, 함수 x
typedef를 통해 (struct 구조체명 변수명)을 줄일 수 있다.

@동적할당
heap메모리에 내가 원하는 만큼 선언한다. 선언한 뒤에서는 free를 통해 반환해준다.
(할당할 자료 type)malloc(sizeof(할당할 자료 type))
malloc : memory alloc 줄임말

@모듈화
각 기 다른 파일에 접근하기 위해서 extern을 사용(단, static이 붙어있으면 가져올 수 없다.)
헤더파일 선언해 사용
헤더파일은 선언만 가능하고 구현은 동일이름의 c파일에서 함
